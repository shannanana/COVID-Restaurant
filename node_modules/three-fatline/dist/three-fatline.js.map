{"version":3,"file":"three-fatline.js","sources":["../src/LineSegmentsGeometry.js","../src/LineMaterial.js","../src/LineSegments2.js","../src/LineGeometry.js","../src/Line2.js"],"sourcesContent":["/**\n * @author WestLangley / http://github.com/WestLangley\n *\n */\n\nimport {\n\tBox3,\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tInstancedBufferGeometry,\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tSphere,\n\tVector3,\n\tWireframeGeometry\n} from 'three';\n\nconst THREE = window.THREE\n\t? window.THREE // Prefer consumption from global THREE, if exists\n\t: {\n\tBox3,\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tInstancedBufferGeometry,\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tSphere,\n\tVector3,\n\tWireframeGeometry\n};\n\n// support multiple method names for backwards threejs compatibility\nvar setAttributeFn = new THREE.BufferGeometry().setAttribute ? 'setAttribute' : 'addAttribute';\n\nvar LineSegmentsGeometry = function () {\n\n\tTHREE.InstancedBufferGeometry.call( this );\n\n\tthis.type = 'LineSegmentsGeometry';\n\n\tvar positions = [ - 1, 2, 0, 1, 2, 0, - 1, 1, 0, 1, 1, 0, - 1, 0, 0, 1, 0, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\tvar uvs = [ - 1, 2, 1, 2, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 2, 1, - 2 ];\n\tvar index = [ 0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5 ];\n\n\tthis.setIndex( index );\n\tthis[setAttributeFn]( 'position', new THREE.Float32BufferAttribute( positions, 3 ) );\n\tthis[setAttributeFn]( 'uv', new THREE.Float32BufferAttribute( uvs, 2 ) );\n\n};\n\nLineSegmentsGeometry.prototype = Object.assign( Object.create( THREE.InstancedBufferGeometry.prototype ), {\n\n\tconstructor: LineSegmentsGeometry,\n\n\tisLineSegmentsGeometry: true,\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tconsole.warn( 'THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4().' );\n\n\t\treturn this.applyMatrix4( matrix );\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tvar start = this.attributes.instanceStart;\n\t\tvar end = this.attributes.instanceEnd;\n\n\t\tif ( start !== undefined ) {\n\n\t\t\tmatrix.applyToBufferAttribute( start );\n\n\t\t\tmatrix.applyToBufferAttribute( end );\n\n\t\t\tstart.data.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetPositions: function ( array ) {\n\n\t\tvar lineSegments;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tlineSegments = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tlineSegments = new Float32Array( array );\n\n\t\t}\n\n\t\tvar instanceBuffer = new THREE.InstancedInterleavedBuffer( lineSegments, 6, 1 ); // xyz, xyz\n\n\t\tthis[setAttributeFn]( 'instanceStart', new THREE.InterleavedBufferAttribute( instanceBuffer, 3, 0 ) ); // xyz\n\t\tthis[setAttributeFn]( 'instanceEnd', new THREE.InterleavedBufferAttribute( instanceBuffer, 3, 3 ) ); // xyz\n\n\t\t//\n\n\t\tthis.computeBoundingBox();\n\t\tthis.computeBoundingSphere();\n\n\t\treturn this;\n\n\t},\n\n\tsetColors: function ( array ) {\n\n\t\tvar colors;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tcolors = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tcolors = new Float32Array( array );\n\n\t\t}\n\n\t\tvar instanceColorBuffer = new THREE.InstancedInterleavedBuffer( colors, 6, 1 ); // rgb, rgb\n\n\t\tthis[setAttributeFn]( 'instanceColorStart', new THREE.InterleavedBufferAttribute( instanceColorBuffer, 3, 0 ) ); // rgb\n\t\tthis[setAttributeFn]( 'instanceColorEnd', new THREE.InterleavedBufferAttribute( instanceColorBuffer, 3, 3 ) ); // rgb\n\n\t\treturn this;\n\n\t},\n\n\tfromWireframeGeometry: function ( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\n\t\treturn this;\n\n\t},\n\n\tfromEdgesGeometry: function ( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\n\t\treturn this;\n\n\t},\n\n\tfromMesh: function ( mesh ) {\n\n\t\tthis.fromWireframeGeometry( new THREE.WireframeGeometry( mesh.geometry ) );\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tfromLineSegements: function ( lineSegments ) {\n\n\t\tvar geometry = lineSegments.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\tthis.setPositions( geometry.vertices );\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.position.array ); // assumes non-indexed\n\n\t\t}\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tvar box = new THREE.Box3();\n\n\t\treturn function computeBoundingBox() {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new THREE.Box3();\n\n\t\t\t}\n\n\t\t\tvar start = this.attributes.instanceStart;\n\t\t\tvar end = this.attributes.instanceEnd;\n\n\t\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( start );\n\n\t\t\t\tbox.setFromBufferAttribute( end );\n\n\t\t\t\tthis.boundingBox.union( box );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar vector = new THREE.Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tvar start = this.attributes.instanceStart;\n\t\t\tvar end = this.attributes.instanceEnd;\n\n\t\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tthis.boundingBox.getCenter( center );\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = start.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.fromBufferAttribute( start, i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t\tvector.fromBufferAttribute( end, i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function () {\n\n\t\t// todo\n\n\t},\n\n\tclone: function () {\n\n\t\t// todo\n\n\t},\n\n\tcopy: function ( /* source */ ) {\n\n\t\t// todo\n\n\t\treturn this;\n\n\t}\n\n} );\n\nexport default LineSegmentsGeometry;\n","/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  linewidth: <float>,\n *  dashed: <boolean>,\n *  dashScale: <float>,\n *  dashSize: <float>,\n *  dashOffset: <float>,\n *  gapSize: <float>,\n *  resolution: <Vector2>, // to be set by renderer\n * }\n */\n\nimport {\n\tShaderLib,\n\tShaderMaterial,\n\tUniformsLib,\n\tUniformsUtils,\n\tVector2\n} from 'three';\n\nconst THREE = window.THREE\n\t? window.THREE // Prefer consumption from global THREE, if exists\n\t: {\n\tShaderLib,\n\tShaderMaterial,\n\tUniformsLib,\n\tUniformsUtils,\n\tVector2\n};\n\nTHREE.UniformsLib.line = {\n\n\tlinewidth: { value: 1 },\n\tresolution: { value: new Vector2( 1, 1 ) },\n\tdashScale: { value: 1 },\n\tdashSize: { value: 1 },\n\tdashOffset: { value: 0 },\n\tgapSize: { value: 1 }, // todo FIX - maybe change to totalSize\n\topacity: { value: 1 }\n\n};\n\nTHREE.ShaderLib[ 'line' ] = {\n\n\tuniforms: THREE.UniformsUtils.merge( [\n\t\tTHREE.UniformsLib.common,\n\t\tTHREE.UniformsLib.fog,\n\t\tTHREE.UniformsLib.line\n\t] ),\n\n\tvertexShader:\n\t\t`\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n\t\tuniform float linewidth;\n\t\tuniform vec2 resolution;\n\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n\n\t\tvarying vec2 vUv;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashScale;\n\t\t\tattribute float instanceDistanceStart;\n\t\t\tattribute float instanceDistanceEnd;\n\t\t\tvarying float vLineDistance;\n\n\t\t#endif\n\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#ifdef USE_COLOR\n\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t#endif\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\n\t\t\t#endif\n\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\tvUv = uv;\n\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tif ( perspective ) {\n\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t// ndc space\n\t\t\tvec2 ndcStart = clipStart.xy / clipStart.w;\n\t\t\tvec2 ndcEnd = clipEnd.xy / clipEnd.w;\n\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd - ndcStart;\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\n\t\t\t// perpendicular to dir\n\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\n\t\t\t// undo aspect ratio adjustment\n\t\t\tdir.x /= aspect;\n\t\t\toffset.x /= aspect;\n\n\t\t\t// sign flip\n\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t// endcaps\n\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\toffset += - dir;\n\n\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\toffset += dir;\n\n\t\t\t}\n\n\t\t\t// adjust for linewidth\n\t\t\toffset *= linewidth;\n\n\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\toffset /= resolution.y;\n\n\t\t\t// select end\n\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t// back to clip space\n\t\t\toffset *= clip.w;\n\n\t\t\tclip.xy += offset;\n\n\t\t\tgl_Position = clip;\n\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}\n\t\t`,\n\n\tfragmentShader:\n\t\t`\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashSize;\n\t\t\tuniform float dashOffset;\n\t\t\tuniform float gapSize;\n\n\t\t#endif\n\n\t\tvarying float vLineDistance;\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\tif ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t#endif\n\n\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\tfloat a = vUv.x;\n\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t}\n\n\t\t\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, diffuseColor.a );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <encodings_fragment>\n\t\t\t#include <fog_fragment>\n\t\t\t#include <premultiplied_alpha_fragment>\n\n\t\t}\n\t\t`\n};\n\nvar LineMaterial = function ( parameters ) {\n\n\tTHREE.ShaderMaterial.call( this, {\n\n\t\ttype: 'LineMaterial',\n\n\t\tuniforms: THREE.UniformsUtils.clone( THREE.ShaderLib[ 'line' ].uniforms ),\n\n\t\tvertexShader: THREE.ShaderLib[ 'line' ].vertexShader,\n\t\tfragmentShader: THREE.ShaderLib[ 'line' ].fragmentShader,\n\n\t\tclipping: true // required for clipping support\n\n\t} );\n\n\tthis.dashed = false;\n\n\tObject.defineProperties( this, {\n\n\t\tcolor: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.diffuse.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.diffuse.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tlinewidth: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.linewidth.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.linewidth.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdashScale: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.dashScale.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.dashScale.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdashSize: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.dashSize.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.dashSize.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdashOffset: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.dashOffset.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.dashOffset.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgapSize: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.gapSize.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.gapSize.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\topacity: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.opacity.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.opacity.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tresolution: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.resolution.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.resolution.value.copy( value );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tthis.setValues( parameters );\n\n};\n\nLineMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\nLineMaterial.prototype.constructor = LineMaterial;\n\nLineMaterial.prototype.isLineMaterial = true;\n\nLineMaterial.prototype.copy = function ( source ) {\n\n\tTHREE.ShaderMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\n\tthis.resolution = source.resolution;\n\n\t// todo\n\n\treturn this;\n\n};\n\n\nexport default LineMaterial;\n","/**\n * @author WestLangley / http://github.com/WestLangley\n *\n */\n\nimport {\n\tBufferGeometry,\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tLine3,\n\tMathUtils,\n\tMatrix4,\n\tMesh,\n\tVector3,\n\tVector4\n} from 'three';\n\nconst THREE = window.THREE\n\t? window.THREE // Prefer consumption from global THREE, if exists\n\t: {\n\t\tBufferGeometry,\n\t\tInstancedInterleavedBuffer,\n\t\tInterleavedBufferAttribute,\n\t\tLine3,\n\t\tMathUtils,\n\t\tMatrix4,\n\t\tMesh,\n\t\tVector3,\n\t\tVector4\n\t};\n\nimport LineSegmentsGeometry from \"./LineSegmentsGeometry.js\";\nimport LineMaterial from \"./LineMaterial.js\";\n\n// support both modes for backwards threejs compatibility\nvar setAttributeFn = new THREE.BufferGeometry().setAttribute ? 'setAttribute' : 'addAttribute';\n\nvar LineSegments2 = function ( geometry, material ) {\n\n\tif ( geometry === undefined ) geometry = new LineSegmentsGeometry();\n\tif ( material === undefined ) material = new LineMaterial( { color: Math.random() * 0xffffff } );\n\n\tTHREE.Mesh.call( this, geometry, material );\n\n\tthis.type = 'LineSegments2';\n\n};\n\nLineSegments2.prototype = Object.assign( Object.create( THREE.Mesh.prototype ), {\n\n\tconstructor: LineSegments2,\n\n\tisLineSegments2: true,\n\n\tcomputeLineDistances: ( function () { // for backwards-compatability, but could be a method of LineSegmentsGeometry...\n\n\t\tvar start = new THREE.Vector3();\n\t\tvar end = new THREE.Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tvar instanceStart = geometry.attributes.instanceStart;\n\t\t\tvar instanceEnd = geometry.attributes.instanceEnd;\n\t\t\tvar lineDistances = new Float32Array( 2 * instanceStart.data.count );\n\n\t\t\tfor ( var i = 0, j = 0, l = instanceStart.data.count; i < l; i ++, j += 2 ) {\n\n\t\t\t\tstart.fromBufferAttribute( instanceStart, i );\n\t\t\t\tend.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\tlineDistances[ j ] = ( j === 0 ) ? 0 : lineDistances[ j - 1 ];\n\t\t\t\tlineDistances[ j + 1 ] = lineDistances[ j ] + start.distanceTo( end );\n\n\t\t\t}\n\n\t\t\tvar instanceDistanceBuffer = new THREE.InstancedInterleavedBuffer( lineDistances, 2, 1 ); // d0, d1\n\n\t\t\tgeometry[setAttributeFn]( 'instanceDistanceStart', new THREE.InterleavedBufferAttribute( instanceDistanceBuffer, 1, 0 ) ); // d0\n\t\t\tgeometry[setAttributeFn]( 'instanceDistanceEnd', new THREE.InterleavedBufferAttribute( instanceDistanceBuffer, 1, 1 ) ); // d1\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() ),\n\n\traycast: ( function () {\n\n\t\tvar start = new THREE.Vector4();\n\t\tvar end = new THREE.Vector4();\n\n\t\tvar ssOrigin = new THREE.Vector4();\n\t\tvar ssOrigin3 = new THREE.Vector3();\n\t\tvar mvMatrix = new THREE.Matrix4();\n\t\tvar line = new THREE.Line3();\n\t\tvar closestPoint = new THREE.Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tif ( raycaster.camera === null ) {\n\n\t\t\t\tconsole.error( 'LineSegments2: \"Raycaster.camera\" needs to be set in order to raycast against LineSegments2.' );\n\n\t\t\t}\n\n\t\t\tvar threshold = ( raycaster.params.Line2 !== undefined ) ? raycaster.params.Line2.threshold || 0 : 0;\n\n\t\t\tvar ray = raycaster.ray;\n\t\t\tvar camera = raycaster.camera;\n\t\t\tvar projectionMatrix = camera.projectionMatrix;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar resolution = material.resolution;\n\t\t\tvar lineWidth = material.linewidth + threshold;\n\n\t\t\tvar instanceStart = geometry.attributes.instanceStart;\n\t\t\tvar instanceEnd = geometry.attributes.instanceEnd;\n\n\t\t\t// pick a point 1 unit out along the ray to avoid the ray origin\n\t\t\t// sitting at the camera origin which will cause \"w\" to be 0 when\n\t\t\t// applying the projection matrix.\n\t\t\tray.at( 1, ssOrigin );\n\n\t\t\t// ndc space [ - 1.0, 1.0 ]\n\t\t\tssOrigin.w = 1;\n\t\t\tssOrigin.applyMatrix4( camera.matrixWorldInverse );\n\t\t\tssOrigin.applyMatrix4( projectionMatrix );\n\t\t\tssOrigin.multiplyScalar( 1 / ssOrigin.w );\n\n\t\t\t// screen space\n\t\t\tssOrigin.x *= resolution.x / 2;\n\t\t\tssOrigin.y *= resolution.y / 2;\n\t\t\tssOrigin.z = 0;\n\n\t\t\tssOrigin3.copy( ssOrigin );\n\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tmvMatrix.multiplyMatrices( camera.matrixWorldInverse, matrixWorld );\n\n\t\t\tfor ( var i = 0, l = instanceStart.count; i < l; i ++ ) {\n\n\t\t\t\tstart.fromBufferAttribute( instanceStart, i );\n\t\t\t\tend.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\tstart.w = 1;\n\t\t\t\tend.w = 1;\n\n\t\t\t\t// camera space\n\t\t\t\tstart.applyMatrix4( mvMatrix );\n\t\t\t\tend.applyMatrix4( mvMatrix );\n\n\t\t\t\t// clip space\n\t\t\t\tstart.applyMatrix4( projectionMatrix );\n\t\t\t\tend.applyMatrix4( projectionMatrix );\n\n\t\t\t\t// ndc space [ - 1.0, 1.0 ]\n\t\t\t\tstart.multiplyScalar( 1 / start.w );\n\t\t\t\tend.multiplyScalar( 1 / end.w );\n\n\t\t\t\t// skip the segment if it's outside the camera near and far planes\n\t\t\t\tvar isBehindCameraNear = start.z < - 1 && end.z < - 1;\n\t\t\t\tvar isPastCameraFar = start.z > 1 && end.z > 1;\n\t\t\t\tif ( isBehindCameraNear || isPastCameraFar ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// screen space\n\t\t\t\tstart.x *= resolution.x / 2;\n\t\t\t\tstart.y *= resolution.y / 2;\n\n\t\t\t\tend.x *= resolution.x / 2;\n\t\t\t\tend.y *= resolution.y / 2;\n\n\t\t\t\t// create 2d segment\n\t\t\t\tline.start.copy( start );\n\t\t\t\tline.start.z = 0;\n\n\t\t\t\tline.end.copy( end );\n\t\t\t\tline.end.z = 0;\n\n\t\t\t\t// get closest point on ray to segment\n\t\t\t\tvar param = line.closestPointToPointParameter( ssOrigin3, true );\n\t\t\t\tline.at( param, closestPoint );\n\n\t\t\t\t// check if the intersection point is within clip space\n\t\t\t\tvar zPos = THREE.MathUtils.lerp( start.z, end.z, param );\n\t\t\t\tvar isInClipSpace = zPos >= - 1 && zPos <= 1;\n\n\t\t\t\tvar isInside = ssOrigin3.distanceTo( closestPoint ) < lineWidth * 0.5;\n\n\t\t\t\tif ( isInClipSpace && isInside ) {\n\n\t\t\t\t\tline.start.fromBufferAttribute( instanceStart, i );\n\t\t\t\t\tline.end.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\t\tline.start.applyMatrix4( matrixWorld );\n\t\t\t\t\tline.end.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar pointOnLine = new THREE.Vector3();\n\t\t\t\t\tvar point = new THREE.Vector3();\n\n\t\t\t\t\tray.distanceSqToSegment( line.start, line.end, point, pointOnLine );\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tpoint: point,\n\t\t\t\t\t\tpointOnLine: pointOnLine,\n\t\t\t\t\t\tdistance: ray.origin.distanceTo( point ),\n\n\t\t\t\t\t\tobject: this,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: i,\n\t\t\t\t\t\tuv: null,\n\t\t\t\t\t\tuv2: null,\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() )\n\n} );\n\nexport default LineSegments2;","/**\n * @author WestLangley / http://github.com/WestLangley\n *\n */\n\n\nimport LineSegmentsGeometry from \"./LineSegmentsGeometry.js\";\n\nvar LineGeometry = function () {\n\n\tLineSegmentsGeometry.call( this );\n\n\tthis.type = 'LineGeometry';\n\n};\n\nLineGeometry.prototype = Object.assign( Object.create( LineSegmentsGeometry.prototype ), {\n\n\tconstructor: LineGeometry,\n\n\tisLineGeometry: true,\n\n\tsetPositions: function ( array ) {\n\n\t\t// converts [ x1, y1, z1,  x2, y2, z2, ... ] to pairs format\n\n\t\tvar length = array.length - 3;\n\t\tvar points = new Float32Array( 2 * length );\n\n\t\tfor ( var i = 0; i < length; i += 3 ) {\n\n\t\t\tpoints[ 2 * i ] = array[ i ];\n\t\t\tpoints[ 2 * i + 1 ] = array[ i + 1 ];\n\t\t\tpoints[ 2 * i + 2 ] = array[ i + 2 ];\n\n\t\t\tpoints[ 2 * i + 3 ] = array[ i + 3 ];\n\t\t\tpoints[ 2 * i + 4 ] = array[ i + 4 ];\n\t\t\tpoints[ 2 * i + 5 ] = array[ i + 5 ];\n\n\t\t}\n\n\t\tLineSegmentsGeometry.prototype.setPositions.call( this, points );\n\n\t\treturn this;\n\n\t},\n\n\tsetColors: function ( array ) {\n\n\t\t// converts [ r1, g1, b1,  r2, g2, b2, ... ] to pairs format\n\n\t\tvar length = array.length - 3;\n\t\tvar colors = new Float32Array( 2 * length );\n\n\t\tfor ( var i = 0; i < length; i += 3 ) {\n\n\t\t\tcolors[ 2 * i ] = array[ i ];\n\t\t\tcolors[ 2 * i + 1 ] = array[ i + 1 ];\n\t\t\tcolors[ 2 * i + 2 ] = array[ i + 2 ];\n\n\t\t\tcolors[ 2 * i + 3 ] = array[ i + 3 ];\n\t\t\tcolors[ 2 * i + 4 ] = array[ i + 4 ];\n\t\t\tcolors[ 2 * i + 5 ] = array[ i + 5 ];\n\n\t\t}\n\n\t\tLineSegmentsGeometry.prototype.setColors.call( this, colors );\n\n\t\treturn this;\n\n\t},\n\n\tfromLine: function ( line ) {\n\n\t\tvar geometry = line.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\tthis.setPositions( geometry.vertices );\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.position.array ); // assumes non-indexed\n\n\t\t}\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( /* source */ ) {\n\n\t\t// todo\n\n\t\treturn this;\n\n\t}\n\n} );\n\nexport default LineGeometry;\n","/**\n * @author WestLangley / http://github.com/WestLangley\n *\n */\n\n\nimport LineSegments2 from \"./LineSegments2.js\";\nimport LineGeometry from \"./LineGeometry.js\";\nimport LineMaterial from \"./LineMaterial.js\";\n\nvar Line2 = function ( geometry, material ) {\n\n\tLineSegments2.call( this );\n\n\tthis.type = 'Line2';\n\n\tthis.geometry = geometry !== undefined ? geometry : new LineGeometry();\n\tthis.material = material !== undefined ? material : new LineMaterial( { color: Math.random() * 0xffffff } );\n\n};\n\nLine2.prototype = Object.assign( Object.create( LineSegments2.prototype ), {\n\n\tconstructor: Line2,\n\n\tisLine2: true,\n\n\tcopy: function ( /* source */ ) {\n\n\t\t// todo\n\n\t\treturn this;\n\n\t}\n\n} );\n\nexport default Line2;\n"],"names":["THREE","window","Box3","BufferGeometry","Float32BufferAttribute","InstancedBufferGeometry","InstancedInterleavedBuffer","InterleavedBufferAttribute","Sphere","Vector3","WireframeGeometry","setAttributeFn","setAttribute","LineSegmentsGeometry","call","type","positions","uvs","index","setIndex","prototype","Object","assign","create","constructor","isLineSegmentsGeometry","applyMatrix","matrix","console","warn","applyMatrix4","start","attributes","instanceStart","end","instanceEnd","undefined","applyToBufferAttribute","data","needsUpdate","boundingBox","computeBoundingBox","boundingSphere","computeBoundingSphere","setPositions","array","lineSegments","Float32Array","Array","isArray","instanceBuffer","setColors","colors","instanceColorBuffer","fromWireframeGeometry","geometry","position","fromEdgesGeometry","fromMesh","mesh","fromLineSegements","isGeometry","vertices","isBufferGeometry","box","setFromBufferAttribute","union","vector","center","getCenter","maxRadiusSq","i","il","count","fromBufferAttribute","Math","max","distanceToSquared","radius","sqrt","isNaN","error","toJSON","clone","copy","ShaderLib","ShaderMaterial","UniformsLib","UniformsUtils","Vector2","line","linewidth","value","resolution","dashScale","dashSize","dashOffset","gapSize","opacity","uniforms","merge","common","fog","vertexShader","fragmentShader","LineMaterial","parameters","clipping","dashed","defineProperties","color","enumerable","get","diffuse","set","setValues","isLineMaterial","source","Line3","MathUtils","Matrix4","Mesh","Vector4","LineSegments2","material","random","isLineSegments2","computeLineDistances","lineDistances","j","l","distanceTo","instanceDistanceBuffer","raycast","ssOrigin","ssOrigin3","mvMatrix","closestPoint","raycaster","intersects","camera","threshold","params","Line2","ray","projectionMatrix","lineWidth","at","w","matrixWorldInverse","multiplyScalar","x","y","z","matrixWorld","multiplyMatrices","isBehindCameraNear","isPastCameraFar","param","closestPointToPointParameter","zPos","lerp","isInClipSpace","isInside","pointOnLine","point","distanceSqToSegment","push","distance","origin","object","face","faceIndex","uv","uv2","LineGeometry","isLineGeometry","length","points","fromLine","isLine2"],"mappings":"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"}